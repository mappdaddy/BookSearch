{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Navbar.js","components/Jumbotron.js","components/SearchForm.js","components/Card.js","components/BookDetail.js","utils/API.js","components/SearchContainer.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","className","concat","fluid","children","Row","Col","classes","size","split","map","join","mb","Navbar","react_router_dom","to","window","location","pathname","Jumbotron","_ref","SearchForm","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","Card","heading","BookDetail","alt","title","src","style","margin","authors","description","href","link","API","search","query","url","axios","get","SearchContainer","state","result","searchBooks","replace","then","res","_this","setState","data","items","console","log","event","target","Object","defineProperty","preventDefault","this","components_Navbar","components_Jumbotron","components_Container","components_Row","components_Col","components_Card","components_SearchForm","length","volumeInfo","book","components_BookDetail","key","undefined","imageLinks","smallThumbnail","Component","App","components_SearchContainer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fef1d44.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n  let classes = size;\n  if (props.mb){\n    classes += ' mb-' + props.mb\n  }\n  // console.log('Col Class Names', classes)\n\n  return (\n    <div className={classes}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\nimport { Link, BrowserRouter } from \"react-router-dom\";\n// import \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <BrowserRouter>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Google Books\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/search\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/saved\"\n              className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Saved\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n    </BrowserRouter>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">(React) Google Books Search</h1>\n                <p className=\"lead\">This is an app to search for Books.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For a Book\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction BookDetail(props) {\n  // console.log(props)\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-2 text-left\">\n          <img alt={props.title} className=\"img-fluid\" src={props.src} style={{ margin: \"0 auto\" }} />\n        </div>\n        <div className=\"col-10 text-left\">\n          <h3>Title: {props.title}</h3>\n          <h3>Authors: {props.authors}</h3>\n          <h3>Description: {props.description}</h3>\n          <a className=\"btn btn-primary View-Btn\" href={props.link} >View</a>\n          <a className=\"btn btn-success View-Btn\" href={props.link} >Save</a>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default BookDetail;","import axios from \"axios\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\nconst APIKEY = \"&key=AIzaSyDZ2a5XVdx41slTElC63F4QwX7YbvICNFc\";\n\nexport default {\n  search: function(query) {\n    const url = BASEURL + query + APIKEY\n    // console.log(url)\n    return axios.get(url); \n  }\n};\n","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Navbar from \"./Navbar\";\nimport Jumbotron from \"./Jumbotron\";\nimport SearchForm from \"./SearchForm\";\nimport Card from \"./Card\";\nimport BookDetail from \"./BookDetail\";\nimport API from \"../utils/API\";\n\n\nclass SearchContainer extends Component {\n  state = {\n    result: [],\n    search: \"\"\n  };\n\n  // When this component mounts, search for the movie \"The Matrix\"\n  componentDidMount() {\n    this.searchBooks('love in the time of cholera')\n  }\n\n  searchBooks = query => {\n    //replace spaces here\n    query = query.replace(/ /g, \"_\");\n    API.search(query).then((res) => {\n      this.setState({ result: res.data.items })\n      console.log(this.state.result)\n    })\n    // .catch(err => console.log(err));\n    // .then(res => this.setState({ result: res.data }))\n    // // .then(res => console.log(res.data ))\n\n  };\n\n  handleInputChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n    // console.log(value);\n  };\n\n  // When the form is submitted, search the Google Books API for the value of `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBooks(this.state.search);\n    // console.log(this.state.search);\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Jumbotron />\n        <Container>\n          <Row>\n\n            <Col size=\"lg-12\" mb='3'>\n              <Card heading=\"Search\">\n                <SearchForm\n                  value={this.state.search}\n                  handleInputChange={this.handleInputChange}\n                  handleFormSubmit={this.handleFormSubmit}\n                />\n              </Card>\n            </Col>\n            <Col size=\"lg-12\" mb='3'>\n              <Card\n                heading={((this.state.result.length > 0) ? this.state.result[0].volumeInfo.title : \"Search for a Book to Begin\")}\n              >\n\n                {this.state.result.length > 0 ? (\n                  this.state.result.map(book => (\n                    // console.log(book.id)\n                                        \n                    <Card className= \"margin\"\n                    heading={book.volumeInfo.title}\n                    >\n                    <BookDetail \n                    // props = {book}\n                      key={book.id}\n                      // id={book.id}                  \n\n                      title={book.volumeInfo.title}                   \n                      src={book.volumeInfo.imageLinks !== undefined ? book.volumeInfo.imageLinks.smallThumbnail : null}\n                      authors={book.volumeInfo.authors}\n                      description={book.volumeInfo.description}\n                      \n                    />\n                    </Card>                   \n                    \n                  ))\n                ) : (\n                    <h3>No Results to Display</h3>\n                )}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchContainer from \"./components/SearchContainer\";\n\nfunction App() {\n  return <SearchContainer />;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}